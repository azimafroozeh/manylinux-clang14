name: Build & Publish manylinux-clang image

on:
  push:        { branches: [ main ] }
  pull_request: { branches: [ main ] }

permissions:
  contents: read
  packages: write      # push to ghcr.io

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ x86_64, aarch64 ]
        include:
          - arch: x86_64
            platform: amd64
          - arch: aarch64
            platform: arm64

    steps:
      # ── source code ─────────────────────────────────────────────────────────
      - uses: actions/checkout@v3

      # ── buildx & registry login ─────────────────────────────────────────────
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ── build & push image for this arch ────────────────────────────────────
      - name: Build and push (${{ matrix.arch }})
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile          # ← the Dockerfile you created
          build-args: ARCH=${{ matrix.arch }}
          platforms: linux/${{ matrix.platform }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/manylinux-clang:latest-${{ matrix.arch }}
            ghcr.io/${{ github.repository_owner }}/manylinux-clang:16.0-${{ matrix.arch }}

      # ── quick smoke-test: clang + <cstdint> ─────────────────────────────────
      - name: Smoke-test (${{ matrix.arch }})
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/manylinux-clang:latest-${{ matrix.arch }}
          docker run --rm $IMAGE clang --version
          printf '#include <cstdint>\nint main(){}' \
            | docker run --rm -i $IMAGE \
                clang++ -std=c++20 -x c++ - -fsyntax-only
          echo "✅  smoke-test passed for $IMAGE"
