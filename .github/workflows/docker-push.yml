name: Build & Publish Docker Image

on:
  push:          { branches: [ main ] }
  pull_request:  { branches: [ main ] }

permissions:
  contents: read
  packages: write   # push to GHCR

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build both arches with matching manylinux base
        arch:
          - amd64
          - arm64
        include:
          - arch: amd64
            base: quay.io/pypa/manylinux2014_x86_64:2025.04.19-1
          - arch: arm64
            base: quay.io/pypa/manylinux2014_aarch64:2025.04.19-1

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image (${{ matrix.arch }})
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          push: true
          platforms: linux/${{ matrix.arch }}
          build-args: BASE_IMAGE=${{ matrix.base }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/manylinux-clang14:14.0.6-${{ matrix.arch }}
            ghcr.io/${{ github.repository_owner }}/manylinux-clang14:latest-${{ matrix.arch }}

      - name: Smoke-test <cstdint> (${{ matrix.arch }})
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/manylinux-clang14:14.0.6-${{ matrix.arch }}
          docker run --rm $IMAGE clang --version
          printf '#include <cstdint>\nint main(){}' \
            | docker run --rm -i $IMAGE \
                clang++ -std=c++20 -stdlib=libc++ -x c++ - -fsyntax-only \
            && echo "âœ… libc++ headers found for $IMAGE"
