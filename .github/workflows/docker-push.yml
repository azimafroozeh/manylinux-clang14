name: Build & Publish Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write   # to push to GHCR

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: x86_64
            base: quay.io/pypa/manylinux2014_x86_64:2025.04.19-1
            mamb_arch: linux-64
          - arch: aarch64
            base: quay.io/pypa/manylinux2014_aarch64:2025.04.19-1
            mamb_arch: linux-aarch64

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push (${{ matrix.arch }})
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/${{ matrix.arch == 'x86_64' && 'amd64' || 'arm64' }}
          push: true
          build-args: |
            ARCH=${{ matrix.arch }}
            MAMBA_ARCH=${{ matrix.mamb_arch }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/manylinux-clang14:14.0.6-${{ matrix.arch }}
            ghcr.io/${{ github.repository_owner }}/manylinux-clang14:latest-${{ matrix.arch }}

      - name: Smoke-test C++ headers (${{ matrix.arch }})
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/manylinux-clang14:14.0.6-${{ matrix.arch }}
          docker run --rm $IMAGE clang --version
          printf '#include <cstdint>\nint main(){}' \
            | docker run --rm -i $IMAGE \
                clang++ -std=c++20 -stdlib=libc++ -x c++ - -fsyntax-only \
            && echo "âœ… C++ headers OK for $IMAGE"
